credentials:
  system:
    domainCredentials:
    - credentials:
      - basicSSHUserPrivateKey:
          scope: SYSTEM
          id: ubuntu-agent-ssh
          username: {{ username }}
          description: "SSH passphrase with private key file."
          privateKeySource:
                directEntry:
                  privateKey: "${readFile:{{ ssh_dir }}/{{ agent_ssh_key }}}"
    - credentials:
      {% if sonarqube -%}
      - string:
          scope: GLOBAL
          id: "sonarqube-token"
          secret: {{ sonar_token}} 
          description: "Sonar token"
      {%- endif %}

      {% if nexus -%}
      - usernamePassword:
          description: "token for nexus repo"
          id: "nexus-token"
          password: "jenkins"
          scope: GLOBAL
          username: "jenkins"
      {%- endif %}

unclassified:
  location:
    url: https://{{ jenkins_url_address }}
    
  {% if sonarqube -%}
  sonarglobalconfiguration:                  
    buildWrapperEnabled: true
    installations:                           
      - name: "sonarqube"                         
        serverUrl: https://{{ sonarqube_url_address }}
        credentialsId: sonarqube-token       
  {%- endif %}

jenkins:
  systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code plugin"
  numExecutors: 0
  securityRealm:
    local:
      allowsSignup: false
      users:
      - id: "admin"
        password: "{{ vault_secrets.jenkins_admin_password }}"
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "USER:Overall/Administer:admin"  
        - "GROUP:Overall/Read:authenticated"
  nodes:
  - permanent:
      labelString: "ubuntu-agent"
      mode: NORMAL
      name: "ubuntu-agent"
      remoteFS: "/home/{{ username }}/jenkins-agent"
      launcher:
        ssh:
          host: "{{ groups['jenkins-agent'][0] }}"
          port: 22
          credentialsId: ubuntu-agent-ssh
          launchTimeoutSeconds: 60
          maxNumRetries: 3
          retryWaitTime: 30
          sshHostKeyVerificationStrategy:
            manuallyTrustedKeyVerificationStrategy:
              requireInitialManualTrust: false
# Tool Configuration
tool:
  git:
    installations:
      - name: "Default"
        home: "/usr/bin/git"

  {% if maven_enable | default(false) -%}
  maven:
    installations:
      - name: "maven3"
        properties:
        - installSource:
            installers:
            - maven:
                id: "3.9.9"
  {%- endif %}

  {% if java_enable | default(false) -%}
  jdk:
    installations:
      - name: "jdk17"
        properties:
        - installSource:
            installers:
            - adoptOpenJdkInstaller:
                id: "jdk-17+35"
  {%- endif %}

  {% if sonarqube -%}
  sonarRunnerInstallation:
    installations:
    - name: "Sonar"
      properties:
      - installSource:
          installers:
          - sonarRunnerInstaller:
              id: "7.1.0.4889"
  {%- endif %}

  