- name: Wait for {{ container_name}} to become available
  ansible.builtin.uri:
      url: "{{ nexus_url }}/{{ status_check }}"
      method: GET
      status_code: 200
  register: nexus_status
  until: nexus_status.status == 200 
  retries: 30
  delay: 10
  ignore_errors: yes

- name: Check users list with new password
  ansible.builtin.uri:
    url: "{{ nexus_url }}/service/rest/v1/security/users"
    method: GET
    user: "{{ admin_user }}"
    password: "{{ vault_secrets.new_admin_password }}"
    force_basic_auth: yes
    status_code: 
    - 200
    - 400
    - 403
    - 401
    validate_certs: no
  register: nexus_users_check
  ignore_errors: true

- name: Change default admin password
  block:
  - name: Get old password in {{ container_name }}
    community.docker.docker_container_exec:
      container: "{{ container_name }}"
      command: /bin/bash -c "cat /nexus-data/admin.password"
    register: default_pass

  - name: set old password
    ansible.builtin.set_fact:
      default_password: "{{ default_pass.stdout }}"

  - name: Change old password
    ansible.builtin.uri:
      method: PUT
      url: "{{ nexus_url }}/{{ change_password }}"
      url_username: "{{ admin_user }}"
      url_password: "{{ default_password }}"
      force_basic_auth: yes
      headers:
        Content-Type: "text/plain"
      body: "{{ vault_secrets.new_admin_password }}"
      status_code: 204

  when: nexus_users_check.status != 200
  
- name: check if role {{ role_id }} exist
  ansible.builtin.uri:
    url: "{{ nexus_url }}/{{ get_role }}/{{ role_id }}?source=default"
    method: GET
    url_username: "{{ admin_user }}"
    url_password: "{{ vault_secrets.new_admin_password }}"
    force_basic_auth: yes
    status_code:
      - 200
      - 404
  register: role_result

- name: create new role
  ansible.builtin.uri:
    url: "{{ nexus_url }}/{{ create_role }}"
    method: POST
    headers:
        Content-Type: "application/json"
    url_username: "{{ admin_user }}"
    url_password: "{{ vault_secrets.new_admin_password }}"
    force_basic_auth: yes
    body_format: json
    body: 
      id: "{{ role_id }}"
      name: "Docker Read/Edit Access"
      description: "Allows read and edit access to Docker repositories"
      privileges:
        - "nx-repository-view-docker-*-add"
        - "nx-repository-view-docker-*-browse"
        - "nx-repository-view-docker-*-edit"
        - "nx-repository-view-docker-*-read"
      roles: []
    status_code:
      - 200
  when: role_result.status == 404

- name: check if {{ nexus_username }} exist
  ansible.builtin.uri:
    url: "{{ nexus_url }}/{{ get_user }}/?userId={{ nexus_username }}"
    method: GET
    url_username: "{{ admin_user }}"
    url_password: "{{ vault_secrets.new_admin_password }}"
    force_basic_auth: yes
    status_code:
      - 200
      - 404
  register: user_result

- name: Create user
  ansible.builtin.uri:
    url: "{{ nexus_url }}/{{ create_user }}"
    method: POST
    headers:
        Content-Type: "application/json"
    url_username: "{{ admin_user }}"
    url_password: "{{ vault_secrets.new_admin_password }}"
    force_basic_auth: yes
    body_format: json
    body: 
      userId: "{{ nexus_username }}"
      firstName: "{{ nexus_username }}"
      lastName: "{{ nexus_username }}"
      emailAddress: "{{ nexus_username }}@example.com"
      password: "{{ vault_secrets.nexus_password }}"
      status: "active"
      roles:
        - "{{ role_id }}"
    status_code:
      - 200
      - 403
      - 400
  when: user_result.status == 404

    

